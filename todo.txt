## Hackathon TODO List & Progress

Key:
*   `[x]` - Done
*   `[!]` - In Progress / Partially Done
*   `[ ]` - To Do

### Core Functionality & Enhancements

1.  **[x] Implement Gemini API Integration (Proxy Server)**:
    *   **[x]** Proxy server functional with Gemini.
    *   **[x]** API keys handled securely via environment variables.
    *   **[x]** Standardized JSON response for 'word' mode, simple text for 'phrase' mode.
2.  **[!] Expand Local Dictionary (`dictionary.json`)**:
    *   **[ ]** Add more words with detailed, structured entries for robust fallback.
    *   **[ ]** Consider categories for words (e.g., common, JLPT N5, tech terms).
3.  **[!] Refine Word Detection (Shift-Hover)**:
    *   **[!]** Current `getWordAtPoint` in `content.js` works but could be improved for complex DOM structures and edge cases.
    *   **[ ]** Consider performance implications with more complex detection.
4.  **[ ] Visual Feedback for Shift-Hover**:
    *   Highlight the word currently being detected under the cursor (e.g., with a subtle underline or background color) *before* the popup appears to improve UX.
5.  **[x] Separate Phrase Translation Trigger**:
    *   **[x]** Highlighted text now shows a button.
    *   **[x]** Clicking button triggers phrase translation to Japanese.

### Popup UI/UX

6.  **[x] Implement Popup Action Buttons (Basic)**:
    *   **[x]** Copy translation (for rich word lookup, copies the main displayed word/reading).
    *   **[ ]** "Play pronunciation": Integrate with a Text-to-Speech (TTS) service for Japanese audio (e.g., browser built-in `speechSynthesis`).
    *   **[ ]** "View in Dictionary": Could link to an external online dictionary (e.g., Jisho.org).
7.  **[!] Enhance Popup Styling & Layout**:
    *   **[!]** Basic styling exists. Could be further refined for readability and aesthetics (Yomichan-like).
    *   **[ ]** Consider options for user-configurable font sizes.
    *   **[ ]** Handle display of multiple definitions/examples more gracefully if Gemini provides them in a list.
8.  **[!] Error Handling and Display**:
    *   **[!]** Basic error messages are shown.
    *   **[ ]** Improve how errors (network, API, no translation found) are displayed in the popup â€“ make them more user-friendly and distinct.

### Advanced Features (Stretch Goals)

9.  **[ ] Configuration Options**:
    *   Allow users to choose the trigger key for hover-translation.
    *   Option to disable/enable specific translation modes.
    *   (Stored using `chrome.storage`)
10. **[ ] Kanji Information**: For 'word' mode, if Gemini provides Kanji, explore ways to show more details (e.g., link to Jisho, or if API can provide, stroke order, radicals - might be too complex).
11. **[ ] Anki Integration**: (Very ambitious) Option to send words/translations to an Anki deck.

### Code Quality & Refactoring

12. **[x] Removed Old Context Menu Logic**: Code related to the old right-click context menu has been removed.
13. **[!] Add Comments & Documentation**:
    *   **[!]** Some comments exist.
    *   **[ ]** Ensure all code is well-commented, especially complex parts.
14. **[ ] Robust Offline Handling**: Better define behavior when the proxy server is unreachable and local dictionary fallback isn't sufficient.